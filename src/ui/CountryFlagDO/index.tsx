import type { AriaRole, SVGProps } from 'react';

import React from 'react';

import { getElementClass, getElementId, mergeClassNames } from '@/util/string-helper';

/**
 * @description SVG 아이콘 (도미니카 공화국 국기) 을 랜더링합니다.
 * @param props - SVGProps를 상속받은 props 객체.
 * @param {string} [props.className] - css 클래스.
 * @param {string} [props.width='1.5rem'] - 너비. (기본값: '1.5rem')
 * @param {string} [props.height='1.5rem'] - 높이. (기본값: '1.5rem')
 * @remarks 웹 접근성을 위해 `role`, `aria-label` 등의 a11y 관련 props 설정을 권장합니다.
 */
const CountryFlagDO = (props: SVGProps<SVGSVGElement>) => {
  const { className, width, height, role, 'aria-label': ariaLabel, ...rest } = props;

  const iconWidth: string | number = width || '1.5rem';
  const iconHeight: string | number = height || '1.5rem';
  const iconClass = getElementClass('CountryFlagDO');

  const maskId = getElementId('CountryFlagDOMask');

  /* a11y 기본설정 */
  const iconRole: AriaRole = role || 'img';
  const titleId = getElementId('CountryFlagDOTitle');
  const titleText = ariaLabel || '도미니카 공화국';

  return (
    <svg className={mergeClassNames(iconClass, className)} viewBox={'0 0 24 16'} width={iconWidth} height={iconHeight} fill={'none'} role={iconRole} aria-labelledby={titleId} {...rest}>
      <title id={titleId}>{titleText}</title>

      <defs>
        <mask id={maskId} maskUnits={'userSpaceOnUse'} x={0} y={0} width={24} height={16}>
          <rect x={0.923096} y={0.615234} width={22.1538} height={14.7692} rx={2} fill={'#fff'} />
        </mask>
      </defs>

      <g mask={`url(#${maskId})`}>
        <path d={'M0.923096 0.615234H23.0769V15.383H0.923096V0.615234Z'} fill={'white'} />
        <path d={'M0.923096 9.92676H10.0745V15.383H0.923096V9.92676Z'} fill={'#D80027'} />
        <path d={'M0.923096 0.615234H10.0745V6.07581H0.923096V0.615234Z'} fill={'#0052B4'} />
        <path d={'M13.9255 0.615234H23.077V6.07581H13.9255V0.615234Z'} fill={'#D80027'} />
        <path d={'M13.9255 9.92676H23.077V15.383H13.9255V9.92676Z'} fill={'#0052B4'} />
        <path d={'M12 6.24023H9.84082V8.37773C9.84082 8.37773 10.6846 8.63735 12 8.63735V6.24023Z'} fill={'#0052B4'} />
        <path
          fillRule={'evenodd'}
          clipRule={'evenodd'}
          d={
            'M9.73291 6.13232H12.108V8.74536H12C11.3353 8.74536 10.7893 8.67977 10.4088 8.61398C10.2185 8.58108 10.0695 8.54811 9.96765 8.52323C9.91671 8.51079 9.87755 8.50037 9.85089 8.49299C9.83756 8.4893 9.82735 8.48637 9.82036 8.48432C9.81687 8.4833 9.81417 8.4825 9.8123 8.48194L9.81009 8.48127L9.80945 8.48108L9.80918 8.48099C9.80915 8.48098 9.80912 8.48097 9.84087 8.37779L9.80912 8.48097L9.73291 8.45752V6.13232ZM9.94883 8.29575C9.96852 8.30092 9.99191 8.30688 10.0189 8.31347C10.1163 8.33727 10.2605 8.36921 10.4456 8.40121C10.7951 8.46165 11.2902 8.52226 11.892 8.52885V6.34825H9.94883V8.29575Z'
          }
          fill={'white'}
        />
        <path d={'M9.84082 8.37793V8.63755C9.84082 9.82745 10.8057 10.7967 12 10.7967V8.63755C10.6846 8.63755 9.84082 8.37793 9.84082 8.37793Z'} fill={'#D80027'} />
        <path
          fillRule={'evenodd'}
          clipRule={'evenodd'}
          d={
            'M9.94883 8.51843V8.63724C9.94883 9.73157 10.8079 10.6294 11.892 10.6856V8.74462C11.2761 8.73803 10.7685 8.67601 10.4088 8.61381C10.2185 8.58091 10.0695 8.54794 9.96765 8.52307C9.96119 8.52149 9.95491 8.51994 9.94883 8.51843ZM9.87262 8.27443L9.87288 8.27451L9.87437 8.27496C9.87577 8.27538 9.87797 8.27604 9.88098 8.27692C9.88699 8.27867 9.89619 8.28132 9.9085 8.28473C9.93312 8.29155 9.97016 8.30141 10.0189 8.31331C10.1163 8.33711 10.2605 8.36904 10.4456 8.40105C10.8158 8.46506 11.3494 8.52928 12 8.52928H12.108V10.9043H12C10.746 10.9043 9.73291 9.88663 9.73291 8.63724V8.23145L9.87262 8.27443Z'
          }
          fill={'white'}
        />
        <path d={'M12 10.7967C13.1899 10.7967 14.1591 9.83178 14.1591 8.63755V8.37793C14.1591 8.37793 13.3154 8.63755 12 8.63755V10.7967Z'} fill={'#0052B4'} />
        <path
          fillRule={'evenodd'}
          clipRule={'evenodd'}
          d={
            'M14.2671 8.23145V8.63724C14.2671 9.89124 13.2494 10.9043 12.0001 10.9043V10.7964H11.8921V8.52928H12.0001C12.6507 8.52928 13.1843 8.46506 13.5545 8.40105C13.7396 8.36904 13.8837 8.33711 13.9812 8.31331C14.0299 8.30141 14.0669 8.29155 14.0916 8.28473C14.1039 8.28132 14.1131 8.27867 14.1191 8.27692C14.1221 8.27604 14.1243 8.27538 14.1257 8.27496L14.1272 8.27451L14.1274 8.27443L14.1275 8.27442L14.2671 8.23145ZM12.108 10.6856C13.1885 10.6295 14.0512 9.73536 14.0512 8.63724V8.51843C14.0451 8.51994 14.0389 8.52149 14.0324 8.52307C13.9306 8.54794 13.7816 8.58091 13.5913 8.61381C13.2316 8.67601 12.724 8.73803 12.108 8.74462V10.6856Z'
          }
          fill={'white'}
        />
        <path d={'M12 6.24023V8.63735C13.3154 8.63735 14.1591 8.37773 14.1591 8.37773V6.24023H12Z'} fill={'#D80027'} />
        <path
          fillRule={'evenodd'}
          clipRule={'evenodd'}
          d={
            'M11.8921 6.13232H14.2671V8.45752L14.1909 8.48097L14.1592 8.37779C14.1909 8.48097 14.1909 8.48098 14.1909 8.48099L14.1906 8.48108L14.19 8.48127L14.1878 8.48194C14.1859 8.4825 14.1832 8.4833 14.1797 8.48432C14.1727 8.48637 14.1625 8.4893 14.1492 8.49299C14.1225 8.50037 14.0833 8.51079 14.0324 8.52323C13.9306 8.54811 13.7816 8.58108 13.5913 8.61398C13.2108 8.67977 12.6648 8.74536 12.0001 8.74536H11.8921V6.13232ZM14.0512 8.29575V6.34825H12.108V8.52885C12.7098 8.52226 13.205 8.46165 13.5545 8.40121C13.7396 8.36921 13.8837 8.33727 13.9812 8.31347C14.0082 8.30688 14.0315 8.30092 14.0512 8.29575Z'
          }
          fill={'white'}
        />
      </g>
    </svg>
  );
};

export default CountryFlagDO;
